import mongoose from "mongoose";
const invoiceSchema = new mongoose.Schema(
  {
    user: {
      userId: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "User",
        required: false,
      },
      name: { type: String, required: false },
      userQuickBooksId: { type: String, required: false },
    },
    estimate: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Estimate",
      required: false,
    },

    warning: { type: String, required: false },

    shippings: [
      {
        confirmationSent: { type: Boolean, default: false, required: false },
        isMaster: { type: Boolean, default: false, required: false },
        masterNumber: { type: String, required: false },
        trackingNumber: { type: String, required: false },
        easyPostId: { type: String, required: false },
        easyPostRateId: { type: String, required: false },
        shippingMethod: { type: String, required: false },
        sendingDate: { type: Date, required: false },
        deliveryEstimatedDate: { type: Date, required: false },
        labelUrl: { type: String, required: false },
        labelId: { type: String, required: false },
        labelFile: { type: String, required: false },
        emailSent: { type: Boolean, default: false, required: false },
        parcels: [
          {
            easyPostId: { type: String, required: false },
            isMaster: { type: Boolean, default: false, required: false },
            trackingNumber: { type: String, required: false },
            sendingDate: { type: Date, required: false },
            deliveryEstimatedDate: { type: Date, required: false },
            deliveryDate: { type: Date, required: false },
            trackerId: { type: String, required: false },
            trackerStatus: { type: String, required: false },
            status: { type: String, required: false },
            weight: { type: Number, required: false },
            length: { type: Number, required: false },
            width: { type: Number, required: false },
            height: { type: Number, required: false },
            labelUrl: { type: String, required: false },
            labelId: { type: String, required: false },
            labelFile: { type: String, required: false },
            fileId: { type: String, required: false },
            fileName: { type: String, required: false },
            price: { type: Number, required: false },
            finalPrice: { type: Number, required: false },
            updateInfo: { type: String, required: false },
            trackerDetails: [
              {
                datetime: { type: Date, required: false },
                message: { type: String, required: false },
                status: { type: String, required: false },
                status_detail: { type: String, required: false },
                tracking_location: {
                  city: { type: String, required: false },
                  state: { type: String, required: false },
                  country: { type: String, required: false },
                  zip: { type: String, required: false },
                },
              },
            ],
          },
        ],
        price: { type: Number, required: false },
        deliveryDateGuaranteed: { type: Boolean, required: false },
        deliveryDateGuaranteedDate: { type: Date, required: false },
        finalPrice: { type: Number, required: false },
        paymentMethod: { type: String, required: false },
        paymentDate: { type: Date, required: false },
        deliveryDate: { type: Date, required: false },
        processDate: { type: Date, required: false },
        atHeadquartersDate: { type: Date, required: false },
        status: { type: String, required: false },
        trackerCreated: { type: Boolean, required: false },
        trackerStatus: { type: String, required: false },
        lastStatusDetail: { type: String, required: false },
        fileId: { type: String, required: false },
        fileName: { type: String, required: false },
        finalFileId: { type: String, required: false },
        finalFileName: { type: String, required: false },
        trackerId: { type: String, required: false },
        trackerDetails: [
          {
            datetime: { type: Date, required: false },
            message: { type: String, required: false },
            status: { type: String, required: false },
            status_detail: { type: String, required: false },
            tracking_location: {
              city: { type: String, required: false },
              state: { type: String, required: false },
              country: { type: String, required: false },
              zip: { type: String, required: false },
            },
          },
        ],
        packingSlip: {
          packingSlipItems: [
            {
              noExpirationDate: {
                type: Boolean,
                default: false,
                required: false,
              },
              gtin: { type: String, required: false },
              name: { type: String, required: false },
              quantity: { type: Number, required: false },
              quantityToShip: { type: Number, required: false },
              typeOfPurchase: { type: String, required: false },
              manufacturer: { type: String, required: false },
              lot: { type: String, required: false },
              expirationDate: { type: Date, required: false },
              productId: {
                type: mongoose.Schema.Types.ObjectId,
                ref: "Product",
                required: false,
              },
              designatedLots: [
                {
                  gtin: { type: String, required: false },
                  quantity: { type: Number, required: false },
                  expirationDate: { type: Date, required: false },
                  lot: { type: String, required: false },
                },
              ],
            },
          ],
        },
      },
    ],
    lastSentDate: { type: Date, required: false },
    shippingCost: { type: Number, required: false },
    signedFile: {
      acceptedBy: {
        signature: { type: String, required: false },
        signer: { type: String, required: false },
        signatureDate: { type: Date, required: false },
        ip: { type: String, required: false },
      },
      approvedBy: {
        signature: { type: String, required: false },
        signer: { type: String, required: false },
        signatureDate: { type: Date, required: false },
        ip: { type: String, required: false },
      },
      fileId: { type: String, required: false },
      fileName: { type: String, required: false },
    },
    scannedBulks: [
      {
        linkedShipment: { type: String, required: false },
        scannedItems: [
          {
            noExpirationDate: {
              type: Boolean,
              default: false,
              required: false,
            },
            gtin: { type: String, required: false },
            name: { type: String, required: false },
            quantity: { type: Number, required: false },
            quantityToScan: { type: Number, required: false },
            typeOfPurchase: { type: String, required: false },
            manufacturer: { type: String, required: false },
            lot: { type: String, required: false },
            expirationDate: { type: Date, required: false },
            eachCount: { type: Number, default: 0, required: false },
            registeredOnInventory: { type: Boolean, required: false },
            productId: {
              type: mongoose.Schema.Types.ObjectId,
              ref: "Product",
              required: false,
            },
          },
        ],
      },
    ],

    invoiceItems: [
      {
        productId: {
          type: mongoose.Schema.Types.ObjectId,
          ref: "Product",
          required: false,
        },
        gtin: { type: String, required: false },
        approved: { type: Boolean, required: false },
        quantity: { type: Number, required: false },
        typeOfPurchase: { type: String, required: false },
        manufacturer: { type: String, required: false },
        name: { type: String, required: false },
        description: { type: String, required: false },
        slug: { type: String, required: false },
        baseCost: { type: Number, required: false },
        onThisScan: { type: Number, required: false },
        shipped: { type: Number, required: false },
        sentOverNight: { type: Boolean, required: false },
        noExpirationDate: { type: Boolean, required: false },
        designatedLots: [
          {
            gtin: { type: String, required: false },
            countInStock: { type: Number, required: false },
            quantity: { type: Number, required: false },
            expirationDate: { type: Date, required: false },
            lot: { type: String, required: false },
            purchasePrice: { type: Number, required: false },
            heldStock: { type: Number, required: false },
            headquarter: {
              _id: {
                type: mongoose.Schema.Types.ObjectId,
                ref: "Headquarters",
                required: false,
              },
              name: { type: String, required: false },
            },
          },
        ],
        lots: [
          {
            gtin: { type: String, required: false },
            countInStock: { type: Number, required: false },
            expirationDate: { type: Date, required: false },
            lot: { type: String, required: false },
            purchasePrice: { type: Number, required: false },
            heldStock: { type: Number, required: false },
            headquarter: {
              _id: {
                type: mongoose.Schema.Types.ObjectId,
                ref: "Headquarters",
                required: false,
              },
              name: { type: String, required: false },
            },
          },
        ],
        unitPrice: { type: Number, required: false },
        salePrice: { type: Number, required: false },
        minSalePrice: { type: Number, required: false },
        totalPrice: { type: Number, required: false },
        productSearchQuery: { type: String, required: false },
        quickBooksItemId: { type: String, required: false },
        quickBooksItemIdProduction: { type: String, required: false },
        quickBooksQuantityOnHandProduction: { type: Number, required: false },
        heldStock: { type: Number, required: false },
        customerPrice: { type: Number, required: false },
        countInStock: { type: Number, required: false },
        floatingStock: { type: Number, required: false },
        each: {
          countInStock: { type: Number, required: false },
          floatingStock: { type: Number, required: false },
          quickBooksItemId: { type: String, required: false },
          quickBooksItemIdProduction: { type: String, required: false },
          description: { type: String, required: false },
          gtin: { type: String, required: false },
          quickBooksQuantityOnHandProduction: { type: Number, required: false },
          customerPrice: { type: Number, required: false },
          heldStock: { type: Number, required: false },
          minSalePrice: { type: Number, required: false },
          lots: [
            {
              countInStock: { type: Number, required: false },
              expirationDate: { type: Date, required: false },
              lot: { type: String, required: false },
              purchasePrice: { type: Number, required: false },
              heldStock: { type: Number, required: false },
            },
          ],
        },
        box: {
          countInStock: { type: Number, required: false },
          floatingStock: { type: Number, required: false },
          quickBooksItemId: { type: String, required: false },
          quickBooksItemIdProduction: { type: String, required: false },
          description: { type: String, required: false },
          gtin: { type: String, required: false },
          quickBooksQuantityOnHandProduction: { type: Number, required: false },
          customerPrice: { type: Number, required: false },
          heldStock: { type: Number, required: false },
          minSalePrice: { type: Number, required: false },
          lots: [
            {
              countInStock: { type: Number, required: false },
              expirationDate: { type: Date, required: false },
              lot: { type: String, required: false },
              purchasePrice: { type: Number, required: false },
              heldStock: { type: Number, required: false },
            },
          ],
        },
        loose: {
          countInStock: { type: Number, required: false },
          floatingStock: { type: Number, required: false },
          quickBooksItemId: { type: String, required: false },
          quickBooksItemIdProduction: { type: String, required: false },
          description: { type: String, required: false },
          gtin: { type: String, required: false },
          quickBooksQuantityOnHandProduction: { type: Number, required: false },
          customerPrice: { type: Number, required: false },
          heldStock: { type: Number, required: false },
          minSalePrice: { type: Number, required: false },
          lots: [
            {
              countInStock: { type: Number, required: false },
              expirationDate: { type: Date, required: false },
              lot: { type: String, required: false },
              purchasePrice: { type: Number, required: false },
              heldStock: { type: Number, required: false },
            },
          ],
        },
      },
    ],
    shippingMethod: { type: String, required: false },
    otherShippingBilling: { type: String, required: false },
    shippingBilling: { type: String, required: false },
    customer: {
      _id: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "Customer",
        required: false,
      },

      needFactCheck: { type: Boolean, required: false, default: false },
      arFactCheck: {
        payablesInfo: { type: Boolean, required: false, default: false },
        correctEmail: { type: Boolean, required: false, default: false },
        correctRemitToAddress: {
          type: Boolean,
          required: false,
          default: false,
        },
      },
      user: {
        userId: {
          type: mongoose.Schema.Types.ObjectId,
          ref: "User",
          required: false,
        },
        name: { type: String, required: false },
        email: { type: String, required: false },
        userQuickBooksId: { type: String, required: false },
      },
      billAddr: {
        address: { type: String, required: false },
        suiteNumber: { type: String, required: false },
        city: { type: String, required: false },
        postalCode: { type: String, required: false },
        state: { type: String, required: false },
        country: { type: String, required: false },
        quickBooksAddressId: { type: String, required: false },
      },
      location: {
        address: { type: String, required: false },
        suiteNumber: { type: String, required: false },
        city: { type: String, required: false },
        postalCode: { type: String, required: false },
        state: { type: String, required: false },
        country: { type: String, required: false },
        quickBooksAddressId: { type: String, required: false },
        attentionTo: { type: String, required: false },
      },
      phone: { type: String, required: false },
      email: { type: String, required: false },
      EIN: { type: String, required: false },
      companyName: { type: String, required: false },
      purchaseExecutiveName: { type: String, required: false },
      searchQuery: { type: String, required: false },
      quickBooksCustomerId: { type: String, required: false },
      quickBooksProductionCustomerId: { type: String, required: false },
      creditLimit: { type: Number, required: false },
      upsAccountNumber: { type: String, required: false },
      fedexAccountNumber: { type: String, required: false },
      defaultTerms: { type: String, required: false },
      buyer: {
        title: { type: String, required: false },
        role: { type: String, required: false },
        opOutEmail: { type: Boolean, required: false, default: false },
        name: { type: String, required: false },
        lastName: { type: String, required: false },
        email: { type: String, required: false },
        phone: { type: String, required: false },
        mobile: { type: String, required: false },
        ext: { type: String, required: false },
        mailChimpId: { type: String, required: false },
        mailChimpUniqueEmailId: { type: String, required: false },
        _id: { type: String, required: false },
      },
      purchaseExecutive: [
        {
          title: { type: String, required: false },
          role: { type: String, required: false },
          opOutEmail: { type: Boolean, required: false, default: false },
          name: { type: String, required: false },
          lastName: { type: String, required: false },
          email: { type: String, required: false },
          phone: { type: String, required: false },
          mobile: { type: String, required: false },
          ext: { type: String, required: false },
          mailChimpId: { type: String, required: false },
          mailChimpUniqueEmailId: { type: String, required: false },
        },
      ],
    },
    approved: { type: Boolean, required: false },
    status: { type: String, required: false },
    hasBeenApproved: { type: Boolean, required: false },
    poNumber: { type: String, required: false },
    newPoNumber: { type: String, required: false },
    approvalImage: { type: String, required: false },
    changed: { type: Boolean, required: false },
    closed: { type: Boolean, required: false },
    confirmed: { type: Boolean, required: false },
    itemsPrice: { type: Number, required: false },
    itemsQuantity: { type: Number, required: false },
    totalPrice: { type: Number, required: false },
    creditCardFee: { type: Number, required: false },
    finalPrice: { type: Number, required: false },
    amount: { type: Number, required: false },
    discount: { type: Number, required: false },
    subtotal: { type: Number, required: false },
    quickBooksInvoiceId: { type: String, required: false },
    quickBooksInvoiceSyncToken: { type: String, required: false },
    createdInQuickbooks: { type: Boolean, required: false, default: false },
    quickBooksInvoiceIdProduction: { type: String, required: false },
    quickBooksInvoiceSyncTokenProduction: { type: String, required: false },
    docNumber: { type: String, required: false },
    paymentTerms: { type: String, required: false },
    otherPaymentTerms: [
      {
        paymentTerm: { type: String, required: false },
        paymentTermAmount: { type: Number, required: false },
        paymentDate: { type: Date, required: false },
        isPaid: { type: Boolean, default: false, required: false },
      },
    ],
    paymentMethod: { type: String, required: false },
    dueDate: { type: Date, required: false },
    paymentDate: { type: Date, required: false },
    fileId: { type: String, required: false },
    fileName: { type: String, required: false },
    active: { type: Boolean, required: false, default: false },
    balance: { type: Number, required: false },
    viewStatus: { type: String, required: false },
    chat: {
      messages: [
        {
          sender: {
            userId: {
              type: mongoose.Schema.Types.ObjectId,
              ref: "User",
              required: false,
            },
            name: { type: String, required: false },
            userQuickBooksId: { type: String, required: false },
          },

          text: { type: String, required: false },
          timestamp: { type: Date, required: false },
        },
      ],
      readBy: [
        {
          userId: {
            type: mongoose.Schema.Types.ObjectId,
            ref: "User",
            required: false,
          },
          name: { type: String, required: false },
          userQuickBooksId: { type: String, required: false },
        },
      ],
      dueDate: { type: Date, required: false },
    },
  },
  {
    timestamps: true,
  }
);
const Invoice =
  mongoose.models.Invoice || mongoose.model("Invoice", invoiceSchema);

const invoiceFields = [
  "user",
  "estimate",
  "invoiceItems",
  "customer",
  "itemsPrice",
  "totalPrice",
  "amount",
  "subtotal",
  "quickBooksInvoiceId",
  "quickBooksInvoiceSyncToken",
  "createdInQuickbooks",
  "docNumber",
  "paymentTerms",
  "paymentDate",
  "deposit",
  "balance",
  "createdAt",
  "updatedAt",
  "_id",
];

export { Invoice, invoiceFields };
export default Invoice;
